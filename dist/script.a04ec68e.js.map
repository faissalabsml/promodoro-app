{"version":3,"sources":["src/js/progressRingView.js","src/js/countdown.js","src/js/settingsPopupView.js","src/js/settingsPopup.js","src/js/state.js","src/js/optionsView.js","src/js/script.js"],"names":["path","document","querySelector","length","getTotalLength","style","strokeDasharray","strokeDashoffset","getBoundingClientRect","transition","WebkitTransition","updateProgressRing","running","state","currentTimer","currentInterval","timer","totalWorkTime","nextSession","controlBtn","resetBtn","countdown","startCountdown","textContent","split","isRunning","setInterval","updateCountdown","stopCountdown","nextTimer","displayTimer","promodoroCount","promodoro","displayTotalWorkTime","localStorage","setItem","JSON","stringify","nextOption","controlCountdown","classList","remove","add","clearInterval","sec","minutes","Math","floor","seconds","title","hours","resetTimer","defaultOption","addEventListener","e","keyCode","openSettingsBtn","closeSettingsBtn","settingsContainer","inputs","querySelectorAll","inputArrows","openSettings","closeSettings","changeValue","input","target","closest","previousElementSibling","role","dataset","stepUp","stepDown","forEach","el","preventDefault","previousSettings","font","checked","accentColor","value","id","settingsForm","applyBtn","updateUISettings","root","setProperty","colors","applySettings","key","change","shortBreak","longBreak","salmon","cyan","violet","currentOption","documentElement","init","storage","getItem","parse","window","options","background","moveBackground","left","offsetLeft","updateTimer","option","getAttribute"],"mappings":"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","file":"script.a04ec68e.js","sourceRoot":"..","sourcesContent":["import { state } from \"./state.js\";\n\nconst path = document.querySelector(\".timer__progress--path\");\nconst length = path.getTotalLength();\n\n// Set up the starting positions\npath.style.strokeDasharray = length + \" \" + length;\npath.style.strokeDashoffset = length;\n\npath.getBoundingClientRect();\n\n// Define our transition\npath.style.transition = path.style.WebkitTransition =\n  \"stroke-dashoffset 1s ease-in-out\";\n\nexport const updateProgressRing = function (running = true) {\n  if (!running) path.style.strokeDashoffset = length;\n\n  if (running)\n    path.style.strokeDashoffset =\n      (state.currentTimer * length) / state[state.currentInterval];\n};\n","import { state } from \"./state.js\";\nimport { moveBackground } from \"./optionsView.js\";\nimport { updateProgressRing } from \"./progressRingView.js\";\n\n// Get the time from the DOM\nexport const timer = document.querySelector(\".timer__text > h1\");\nexport const totalWorkTime = document.querySelector(\".work-time\");\nconst nextSession = document.querySelector(\".next-session\");\nexport const controlBtn = document.querySelector(\".control\");\nexport const resetBtn = document.querySelector(\".reset\");\n\n// Declaring the interval\nlet countdown;\n\n// Start countdown function\nconst startCountdown = function () {\n  // Get the timer displayed on the IU and save it in the state object (in seconds)\n  state.currentTimer =\n    +timer.textContent.split(\":\")[0] * 60 + +timer.textContent.split(\":\")[1];\n\n  state.isRunning = true;\n\n  countdown = setInterval(updateCountdown, 1000);\n};\n\n// Update the timer on the UI\nconst updateCountdown = function () {\n  // Update the timer in state object\n  state.currentTimer--;\n\n  // Check if the timer is finished\n  if (state.currentTimer < 0) {\n    stopCountdown();\n    nextTimer();\n    updateProgressRing(false);\n    return;\n  }\n\n  // Display the running timer on the UI\n  displayTimer(state.currentTimer);\n\n  // Update progress ring\n  updateProgressRing();\n};\n\n// Start the next timer (According to the promodoro technique: You do 4 pomodoros/intervals separated by 5 min breaks. After that, you take a longer break of about 15 to 20 minutes)\nconst nextTimer = function () {\n  // Check the current interval/timer and change it to the next interval\n  switch (state.currentInterval) {\n    case \"promodoro\":\n      state.promodoroCount++;\n      state.totalWorkTime += state.promodoro;\n      state.currentInterval = \"shortBreak\";\n\n      displayTotalWorkTime(state.totalWorkTime);\n      nextSession.textContent = \"promodoro\";\n\n      break;\n\n    case \"shortBreak\":\n      state.currentInterval = \"promodoro\";\n\n      nextSession.textContent = \"short break\";\n      break;\n\n    case \"longBreak\":\n      state.currentInterval = \"promodoro\";\n\n      nextSession.textContent = \"short break\";\n\n      state.promodoroCount = 0;\n      break;\n  }\n\n  if (state.currentInterval === \"promodoro\" && state.promodoroCount === 3)\n    nextSession.textContent = \"long break\";\n  if (state.promodoroCount === 4) state.currentInterval = \"longBreak\";\n\n  localStorage.setItem(\"state\", JSON.stringify(state));\n\n  // Get the current timer's label on the HTML and move bg\n  const nextOption = document.querySelector(`#${state.currentInterval}`);\n  moveBackground(null, nextOption);\n\n  // Display and start the next timer about to start\n  displayTimer(state[state.currentInterval]);\n  startCountdown();\n};\n\n// Handle countdown on click event or when pressing the space key\nconst controlCountdown = function () {\n  if (controlBtn.textContent == \"start\" || controlBtn.textContent == \"resume\") {\n    startCountdown();\n    controlBtn.textContent = \"pause\";\n    resetBtn.classList.remove(\"active\");\n    return;\n  }\n  if (controlBtn.textContent == \"pause\") {\n    stopCountdown();\n    controlBtn.textContent = \"resume\";\n    resetBtn.classList.add(\"active\");\n  }\n};\n\n// Stop the countdown interval\nexport const stopCountdown = function () {\n  state.isRunning = false;\n  clearInterval(countdown);\n};\n\n// Transfer the seconds into minutes and seconds and display the result\nexport const displayTimer = function (sec) {\n  let minutes = Math.floor(sec / 60);\n  let seconds = sec % 60;\n\n  minutes = minutes < 10 ? `0${minutes}` : minutes;\n  seconds = seconds < 10 ? `0${seconds}` : seconds;\n\n  timer.textContent = document.title = `${minutes}:${seconds}`;\n};\n\nexport const displayTotalWorkTime = function (sec) {\n  let hours = Math.floor(sec / 3600);\n  let minutes = Math.floor((sec % 3600) / 60);\n  let seconds = Math.floor((sec % 3600) % 60);\n\n  hours = hours < 10 ? `0${hours}` : hours;\n  minutes = minutes < 10 ? `0${minutes}` : minutes;\n  seconds = seconds < 10 ? `0${seconds}` : seconds;\n\n  totalWorkTime.textContent =\n    document.title = `${hours}:${minutes}:${seconds} ${\n      hours == 0 ? \"min\" : hours == 1 ? \"hour\" : \"hours\"\n    }`;\n};\n\n// Reset\nexport const resetTimer = function () {\n  const defaultOption = document.querySelector(\"#promodoro\");\n\n  state.isRunning = false;\n  state.currentInterval = \"promodoro\";\n  state.promodoroCount = 0;\n  state.totalWorkTime = 0;\n\n  localStorage.setItem(\"state\", JSON.stringify(state));\n\n  resetBtn.classList.remove(\"active\");\n  controlBtn.textContent = \"start\";\n  displayTimer(state.promodoro);\n  displayTotalWorkTime(state.totalWorkTime);\n  moveBackground(null, defaultOption);\n  updateProgressRing(false);\n};\n\n// Event listeners\ncontrolBtn.addEventListener(\"click\", controlCountdown);\ndocument.addEventListener(\"keydown\", (e) => {\n  if (e.keyCode !== 32) return;\n  controlCountdown();\n});\n\n// Reset timers\nresetBtn.addEventListener(\"click\", resetTimer);\n","import { controlBtn, resetBtn, stopCountdown } from \"./countdown.js\";\nimport { state } from \"./state.js\";\n\nconst openSettingsBtn = document.querySelector(\".settings-btn\");\nconst closeSettingsBtn = document.querySelector(\".close-btn *\");\nconst settingsContainer = document.querySelector(\".settings-container\");\nconst inputs = settingsContainer.querySelectorAll(\n  \"input[type='number'], input[type='radio']\"\n);\nconst inputArrows = document.querySelectorAll(\".form__inputs--arrows > *\");\n\nconst openSettings = function () {\n  settingsContainer.classList.add(\"active\");\n  stopCountdown();\n};\n\nexport const closeSettings = function () {\n  settingsContainer.classList.remove(\"active\");\n};\n\n// Change input's value using svg arrows\nconst changeValue = function (e) {\n  // Get the input containing the clicked arrows\n  const input = e.target.closest(\n    \".form__inputs--arrows\"\n  ).previousElementSibling;\n\n  // Get the arrow rule (increase or decrease value)\n  const role = e.target.closest(\"svg\").dataset.role;\n\n  // Using stepUp method to change input value\n  role === \"increase\" ? input.stepUp() : input.stepDown();\n};\n\n// Arrow event listener\ninputArrows.forEach((el) =>\n  el.addEventListener(\"click\", (e) => {\n    changeValue(e);\n  })\n);\n\n// To prevent text selection when clicking multiple times on the arrows\ninputArrows.forEach((el) =>\n  el.addEventListener(\"mousedown\", (e) => e.preventDefault(), false)\n);\n\nconst previousSettings = function () {\n  settingsContainer.querySelector(\n    `input[value='${state.font}']`\n  ).checked = true;\n  settingsContainer.querySelector(\n    `input[value='${state.accentColor}']`\n  ).checked = true;\n\n  settingsContainer\n    .querySelectorAll(\"input[type='number']\")\n    .forEach((input) => {\n      input.value = state[input.id] / 60;\n    });\n};\n\n// Open settings popup\nopenSettingsBtn.addEventListener(\"click\", () => {\n  openSettings();\n  previousSettings();\n});\n\n// Close settings\n[settingsContainer, closeSettingsBtn].forEach((el) =>\n  el.addEventListener(\"click\", (e) => {\n    if (e.target === settingsContainer || e.target.closest(\".close-btn\")) {\n      if (controlBtn.textContent !== \"start\") {\n        controlBtn.textContent = \"resume\";\n        resetBtn.classList.add(\"active\");\n      }\n\n      closeSettings();\n    }\n  })\n);\n\ndocument.addEventListener(\"keydown\", (e) => {\n  if (e.keyCode !== 27) return;\n  closeSettings();\n});\n","import { state, root } from \"./state.js\";\nimport { controlBtn, resetBtn, displayTimer, resetTimer } from \"./countdown.js\";\nimport { closeSettings } from \"./settingsPopupView.js\";\nimport { updateProgressRing } from \"./progressRingView.js\";\n\nconst settingsForm = document.querySelector(\".form\");\nconst applyBtn = document.querySelector(\".form__btn\");\n\nexport const updateUISettings = function () {\n  root.style.setProperty(\"--accent-color\", state.colors[state.accentColor]);\n  root.style.setProperty(\"--font\", state.font);\n};\n\nconst applySettings = function () {\n  const inputs = settingsForm.querySelectorAll(\n    \"input[type='number'], input[type='radio']:checked\"\n  );\n\n  inputs.forEach((input) => {\n    const key = input.dataset.change;\n    const value = input.value;\n\n    key === \"font\" || key === \"accentColor\"\n      ? (state[key] = value)\n      : (state[key] = value * 60);\n  });\n\n  if (controlBtn.textContent !== \"start\") {\n    controlBtn.textContent = \"resume\";\n    resetBtn.classList.add(\"active\");\n  } else {\n    displayTimer(state[state.currentInterval]);\n  }\n\n  updateUISettings();\n  closeSettings();\n\n  localStorage.setItem(\"state\", JSON.stringify(state));\n};\n\napplyBtn.addEventListener(\"click\", applySettings);\ndocument.addEventListener(\"keydown\", (e) => {\n  if (e.keyCode !== 13) return;\n  applySettings();\n});\n","import {\n  timer,\n  displayTimer,\n  totalWorkTime,\n  displayTotalWorkTime,\n} from \"./countdown\";\nimport { moveBackground } from \"./optionsView\";\nimport { updateProgressRing } from \"./progressRingView\";\nimport { updateUISettings } from \"./settingsPopup\";\n\nexport let state = {\n  // All times in seconds\n  promodoro: 1500,\n  shortBreak: 300,\n  longBreak: 1200,\n  currentInterval: \"promodoro\",\n  currentTimer: 0,\n  promodoroCount: 0,\n  totalWorkTime: 0,\n  isRunning: false,\n  font: \"kumbh sans\",\n  accentColor: \"salmon\",\n  colors: {\n    salmon: \"#f87272\",\n    cyan: \"#72f4f8\",\n    violet: \"#d882f8\",\n  },\n};\n\nconst currentOption = document.querySelector(`#${state.currentInterval}`);\nexport const root = document.documentElement;\n\nconst init = function () {\n  const storage = localStorage.getItem(\"state\");\n  if (storage) state = JSON.parse(storage);\n\n  state.promodoroCount = 0;\n\n  updateUISettings();\n  moveBackground(null, currentOption);\n  displayTimer(state[state.currentInterval]);\n  displayTotalWorkTime(state.totalWorkTime);\n  document.title = \"promodoro\";\n};\n\nwindow.addEventListener(\"load\", init);\n","import { state } from \"./state.js\";\nimport {\n  timer,\n  controlBtn,\n  resetBtn,\n  stopCountdown,\n  displayTimer,\n} from \"./countdown.js\";\nimport { updateProgressRing } from \"./progressRingView.js\";\n\nconst options = document.querySelectorAll(\".option__label\");\nconst background = document.querySelector(\".option__background\");\n\n// Move the background behind the checked option\nexport const moveBackground = function (e, target) {\n  let input;\n\n  if (e) {\n    target = e.target.closest(\".option\");\n    input = e.target.previousElementSibling;\n  } else {\n    input = target;\n    target = target.closest(\".option\");\n  }\n\n  // Set the input to checked\n  input.checked = true;\n\n  // Get the distance (left) between the label and the parent element using offsetLeft\n  background.style.left = target.offsetLeft + \"px\";\n\n  // Set the current selected interval\n  state.currentInterval = target.querySelector(\"input\").id;\n};\n\n// Get the timer from the state object and display it on click\nconst updateTimer = function (e) {\n  const option = e.target.getAttribute(\"for\");\n\n  stopCountdown();\n\n  displayTimer(state[option]);\n  controlBtn.textContent = \"start\";\n};\n\n// Move background and change timer on click\noptions.forEach((option) =>\n  option.addEventListener(\"click\", (e) => {\n    moveBackground(e);\n    updateTimer(e);\n    updateProgressRing(false);\n\n    resetBtn.classList.remove(\"active\");\n\n    localStorage.setItem(\"state\", JSON.stringify(state));\n  })\n);\n","import \"./optionsView.js\";\nimport \"./settingsPopupView.js\";\nimport \"./settingsPopup.js\";\nimport \"./progressRingView\";\nimport \"./countdown.js\";\n"]}