{"version":3,"sources":["src/js/progressRingView.js","src/js/notification.js","src/js/countdown.js","src/js/settingsPopupView.js","src/js/settingsPopup.js","src/js/state.js","src/js/optionsView.js","src/js/script.js"],"names":["path","document","querySelector","length","getTotalLength","style","strokeDasharray","strokeDashoffset","getBoundingClientRect","transition","WebkitTransition","updateProgressRing","running","state","currentTimer","currentInterval","showNotification","notification","Notification","body","icon","requestPermission","timer","totalWorkTime","nextSession","controlBtn","resetBtn","countdown","startCountdown","textContent","split","isRunning","setInterval","updateCountdown","stopCountdown","nextTimer","displayTimer","promodoroCount","promodoro","displayTotalWorkTime","localStorage","setItem","JSON","stringify","nextOption","controlCountdown","classList","remove","add","clearInterval","sec","minutes","Math","floor","seconds","title","hours","resetTimer","defaultOption","addEventListener","e","keyCode","openSettingsBtn","closeSettingsBtn","settingsContainer","inputs","querySelectorAll","inputArrows","openSettings","closeSettings","changeValue","input","target","closest","previousElementSibling","role","dataset","stepUp","stepDown","forEach","el","preventDefault","previousSettings","font","checked","accentColor","value","id","settingsForm","applyBtn","updateUISettings","root","setProperty","colors","applySettings","key","change","shortBreak","longBreak","salmon","cyan","violet","currentOption","documentElement","init","storage","getItem","parse","window","options","background","moveBackground","left","offsetLeft","updateTimer","option","getAttribute"],"mappings":";;AOAA;;AACA;;AACA;ALFA,ADAA,AKAA,ANAA,AIAA,ADAA,AEAA;AEGA;ALFA,ADCO,AKDP,ANCA,AIDA,ADAA,AEKA,IJJagB,ADAPhB,IAAI,GAAGC,QAAQ,CCAQ,ADAPC,GCAU,SAAnBc,CDAA,CAAuB,cCAJ,GAAY,ODA/B,CAAb;ACCE,ADAF,AOCA,IPDMb,ECAEc,IDAI,GAAGjB,IAAI,CCAC,ADAAI,GCAG,IAAIc,ODAZ,EAAf,EAEA,CCFuB,CAAiB,eAAjB,EAAkC;ACDzD,ADEIC,AKIJ,AFNA,ADCA,AEIA,IJHIA,AEDE2C,IFCE,WEDa,CFCRjD,EEDWZ,QAAQ,CAACC,EFCda,WEDK,CAAuB,GFCvC,YEDgB,CAAxB,KFAyD;AAErDK,ADCJpB,AODA,AJDA,IFCIoB,ADCA,AGFE2C,CHED1D,GCDG,EAAE,ADCV,CAAWC,SGFW,GAAGL,GHEzB,GAA6BE,EGFI,CAACD,GHEC,GAAG,GAAT,GAAeC,CGFnB,CAAuB,IHEhD,UGFyB,CAAzB;ADDA,ADAyD,AKOzD,ANHAH,AIJA,ADEA,AEGA,GJLuB,CAArB,AKOI6G,ANHF,AGFE7C,CHED3D,KAAL,CMGa,ANHFE,GMGKN,OHLO,CGKC,CAACiE,CHLCjE,GHE1B,GAA8BE,EGFI,CAACD,GHEnC,GMGgB,CAA0B,MHLhB,CAAuB,SGKjC,CAAhB,WHL0B,CAA1B;AFEC,AKID,ANFAF,AGHA,CFJO,GKSD8G,ANFF,AGHE7C,CHGDzD,KGHO,GAAGwD,CGKC,GAAG/D,QAAQ,CAACC,ANF5B,IAEA,AGLgC,CAACgE,QGKd,CAAuB,OHL3B,CACb,aGIiB,CAAnB,EAEA,2BHPe,CAAf;ADDA,AEAA,ADIA,AECO,IDLDsB,ADIArB,AECKtD,KAAK,GAAG,GFDF,CCJC,EDIEZ,CCJCA,ODIO,CCJC,ADIAiE,CCJChE,aAAT,CAAuB,CDIxB,CAA0B,KCJzB,CAArB,qBDIoB,CAApB;ADHO,AIQA,ANFPF,AINA,ACKE,IHLWsB,AIQAyF,ANFT,AINEtB,CJMDpF,IENa,CFMlB,CAAWI,CENUR,AEAP,GAAGA,GEQU,EJRE,CAACC,AIQA,ANF9B,EINyB,CJMDF,AINEE,IJME,CAACG,CMEhB0G,IJRQ,AFMG,CENoB,AFMTrG,EINlB,CAAuB,MEQV,CAAUkD,CAAV,EAAaY,EFR1B,CJMO,AINxB,GFAqB,AIQS,AND5B,CEPK,CIQ4C,gCNFnD;ACHAtD,AKME,AHJF,AECEoB,EAAAA,EFDI8B,EGIAG,KAAJ,ADHS,CJHC,CAAClD,AIGA,GFDK,CEDC,EFCE,SAAf+C,EFFN,IAEA,MEAqB,GAAY;ADJ1B,ADKP,ADGO,AIPA,ADILJ,AECAiC,EFDAjC,AECAiC,EHNW1E,AFQAZ,AIPA+E,QCKD,EAAE,GHNY,AGGP,EFEA,CDLUzF,AECA,ADIT6C,EHGW,CIPC,EJOE,GERG,CAAC5C,ACKpC,CAA4B8C,ECJjB0C,CDIX,CHGW/E,AGHqB,QDLL,ACK3B,CDLkD,KECpB,GAAY,CJOV,GERL,AFQ+B,CERrD;ADMP,AKIE,ANF0D,AIN1DgF,ADIA,AECAO,EAAAA,ICGItC,ANFsChD,CME1C,EAAO,EDHE,ELCiD,AKD/C,CDLNP,GCCY,EDDjB,CAAWuF,WAAX,CAAuB,gBAAvB,EAAyC/E,aAAMgF,MAAN,CAAahF,aAAMwE,CJMR,IAAM,MINjB,CAAzC;AFDF,ADMA,AKIIb,ANFF,AGFD,AECCzD,CFJF,CEIEA,EHPIS,AIUFgD,ENFE,CAAC5D,GMEG,GAAGgD,CAAC,ANFZ,CERe,AIUFY,CNFCxE,CKDC,CHPGC,CGOD,CLCC,CMEP,ANFQI,CMECoE,IJVM,AFQZ,CERavE,AFQFK,EMEd,CAAiB,ADRX,SCQN,CJVO,AIUhB,CJVuC,EFQ3B,GAA8BJ,MAA9B,IERI,CAApB;AACO,ADMP,AKIIoE,ANDF,AIRAoB,ACMA7E,EAAAA,EHPWW,AIUT8C,ENDE3D,GMCG,GAAGgD,CAAC,ANDX,CETqB,AIUTY,AFTPnE,ACMO,CLGVL,CKHY,CHPUC,AGCP,ELSX,AITN,CESU,ANAHI,AITIuF,CESQlB,IJVa,AFU9B,CEV+BxE,AFUpBK,KITb,CAAuB,OFDC,CAAuB,AEC/C,EJSE,AIT+BM,CES/B,ENCGA,KEXmB,CAAnB,IECkCsE,GJU5BrE,CIVX,WJUK,GAAqBX,MAAtB,GAAgCU,aAAMA,aAAME,eAAZ,CADlC;ACHJ,AKIG,ANCF,AIVA,ADKM,AECLsB,CLFK,AIPA,CCSLA,CCAA,CHDWgC,KGIJ,ODHO,CFDU,CECR,CAPC,CFMU,SAAhBA,aAAgB,GAAY;ADNlC,ADOP,AKIIE,AHJFP,AECAzC,EFDAyC,AECAzC,EHRWG,AIWT6C,KAAK,GJXY,AIWTC,GJXYvE,AGQT,EAAE,CCGb,ADXe,CFOA,CAAC6C,GDPY,CAAC5C,KCO/B,CAA4B6C,MAA5B,CDPsB,ACOa,CDPU,OCO7C,CDPsB,CAAjB,EAEP;ADMA,AKIIyB,AHJH,AECCzC,CFHK,CEGLA,CFCF,CGEIyC,MAAM,CDHC,ECGEA,ADHA,KATM,CCYA,CAACC,OAAP,CAAe,SAAf,CAAT;AACD,ADHDU,EAAAA,CCNiD,CAWjD,EDLI,EAAE,YAVW;AHGnB,AEAA,ACQEE,EAAAA,EHRE1D,AEAEmE,SFAN,AGQa,EHNb,AGMe,EDRI,GAAG,GCHH,MDGbA,aAAgB,GAAY;AAChC,ACQAD,EAAAA,IDRM5B,ECQA,EAAE,EDRI,GAAGuB,YAAY,CAACtB,gBAAb,CACb,mDADa,CAAf;AFEF,AIUEK,AFRAN,ACKEkC,ECGF5B,AFRAN,EFFIrC,AGOFuE,GCGG,CAACf,AFRA,CAACL,CCKC,EAAE,GCGV,CFRA,CAAe,CFFG,AIUF,GJVK,AGMb,CCIR,CAZiD,CAcjD,GFVgBR,GFFZ3C,EEEW,EAAW,UFFL,GAAY;AACjC,AEEE,ADEJ,AEGIwE,IFHE9B,AEGF8B,IDLML,ACKF,EAAE,CDLG,GAAGxB,CDEC,GAAG,CCFC,ACGX,CDHYK,OAAN,ADEVN,CCFwB0B,MAA1B,IDEgB,CAAUpC,CAAV,EAAa;ADH/B/C,AIWAiG,AFTE,ADEF,AEGET,ECIFS,EDJET,IDLMf,ECKA,ECIE,ADJA,CCICjF,AFTE,EFFPS,CEEUyD,EEShB,CAAiByC,EFTI,CAAC1B,CEStB,GAAwBd,CJXxB,AEEE,GFDA,CAAClD,CIU2B,CAAC2F,GJVvB,CAACpF,MIUe,GAAoB,EJVzC,CAAkBC,CIUrB,CAfiD,CAiBjD,EJZG,CAAwB,GAAxB,EAA6B,CAA7B,CAAD,GAAmC,EAAnC,GAAwC,CAACR,KAAK,CAACO,WAAN,CAAkBC,KAAlB,CAAwB,GAAxB,EAA6B,CAA7B,CAD3C;AAGAjB,AECEkF,ADCF,AEDQ,IDANA,EDCIxB,CCDD,IDCM,CCDD,EDCIX,CDFR7B,ACES,CAACyC,ECDd,IAAkBuB,ADCN,CAAStB,CDFvB,CECuB,EFDL,GECU,ADCd,CDFd,ACGE,YCFA,GACK5D,QDAO,EAEZ6D,GCFWqB,GAAN,IAAaT,KADlB,GAEKzE,IDDP,CAF+B,CAM/B,OCHakF,GAAN,IAAaT,KAAK,GAAG,EAF1B;AFCF3D,AISAd,AFPC,ACfgB,CAAZ,CHaLc,CELA,QFKS,GAAGK,CISNjB,UJTiB,CAACkB,IISxB,GAAwBuC,MAAM,CAACtE,CJTR,EAAkB,IAAlB,CAAvB,KISwB,CAAqB,OAArB,EAA8BqF,EAAtD;AJRD,AISA,AHLC,CDZF,AIFO,EJYP,AISA,GHPQZ,IAAI,GAAGf,CAAC,CAACY,MAAF,CAASC,OAAT,CAAiB,KAAjB,EAAwBG,OAAxB,CAAgCD,IAA7C,CAP+B,CAS/B;ACHA,ACEF,IAAM2B,EDFA7E,WCEa,GAAGxB,QDFL4B,ACEa,CAAC3B,UDFzB,GCEgB,EDFW,OAA/B,EAAwC,CCEOW,KAAK,CAACE,eAAjC,EAAtB;ADDIU,ADGFkD,AEDK,EFCLA,EEDWgB,EFCP,EEDW,GFCN,AEDS1F,QAAQ,CAACsG,CFC3B,GAAsBhC,ECHT1C,GDGc,CAACgD,KEDvB,CFCiB,CCHpB,CDGF,ECH2B,CDGYN,KAAK,CAACO,CCH3C,ODGqC,EAAvC;ADJF,ACKC,CAXD,EAaA,CDPM7C,eAAe,GAAG,SAAlBA,eAAkB,GAAY;AAClC,AECEP,wBAASoB,SAAT,CAAmBE,GAAnB,CAAuB,QAAvB;AFAFnC,AIOF,AFNG,ACEH,GDLE,CESIqG,ADJAV,IAAI,CDFD,ECEI,IHHL1F,AIOS,GAAG,EDJd0F,IAAO,GHHX,AIOIU,ADJmB,GHLW,CAIlC,OIKkB,CAAUtD,CAAV,EAAa;AAC/B,AFNE,ADIJO,AEFE,MCIMgD,ADJAV,KFEG,CGEG,AHFF1B,CEFG,ECIEnB,CAAC,ADJApB,CCICgC,EHFnB,CAAoB,GGEH,CAAS4C,IDJI,CAACV,CFEV1B,EAAD,CCJHnE,GEMA,ADJC,CCIqB,ADJA,KCItB,CAAf,CDJgB,CAAhB,CDFqBA,aAAME,eAAZ,CAAb;AFCF,AIOA,AFPC,ADGiB,AEDlB,MHFIF,AGEA4F,GFEJzB,EAAE,CAACrB,CEFH,EAAa,IHFH7C,SCIV,CAAoB,EDJhB,AGESD,GHFY,CAAzB,CCIA,AEFkB,CHFU,CCIC,CEFR6B,IAAI,CAACiE,IFEI/C,CAAD,AEFR,CAAW6C,CFEI,MEFf,CAAR;AHDX,AIQF,AHJEnC,AEDFzD,EAAAA,EFCEyD,GEDG,CAACjC,OFCO,CAACuB,CAAD,CAAX,IEDF,GAAuB,CAAvB,KCKa/C,aAAMsG,MAAN,CAAb;AJNEjF,AIOFT,AFRAiE,ADIC,AEAD,EDJAA,CDEA,CDDExD,ACAgB,aDAH,CEDC,MEQLL,WAAX,GAAyB,OAAzB;AJNEM,AIOH,AFRC,ADAkB,AEIlB,CCHF,AHDA,EGUA,CJTIA,ACKJ,SDLa,sBGGI,IAAf,EAAqBmE,aAArB;AHFE,AEAF9D,ACGA,EDHAA,YAAY,CAACC,OAAb,CAAqB,OAArB,CCGa5B,CDHiB6B,IAAI,ACGhB,CDHiBC,ACGhB9B,KAAK,CAACE,GHHJ,AEAS,CAAeF,IFA3C,OGGgB,CDHY,ACG9B,CDHA;AFEE,AEDH,ADIDsD,AEDE,CD5BF,UD6BW,CAACY,OAAZ,CAAoB,UAACC,EAAD,OEDGnE,KAAK,CAACU,aAA3B;AHDC,AIMHsF,AHJoB,AEAlB5G,EAAAA,CHfkC,CAelC,GIIK,CAAC8E,CHHNC,CEDQ,CFCN,AEDOzB,CFCNI,GGGL,CAAgB,ADJd,GAAiB,OCIFwD,EHHf,CAAoB,CEDpB,ECIc,QHHd,EAAiC,UAACvD,CAAD;AGGnB,AFNhB6B,ADGmC,AEAlC,CAXD,ODQQ,CEON0B,AFPOxD,EDGiCC,CAAC,CAACqB,EGIpC,CAACtB,SFPT,CAA0B,CDGgB,EAAP,GGIjC,CAAwB,AFP1B,EAAmCmC,KEOjC,EAAiC,MFPnC,IEOoClC,CAAD,EAAO;AACtCmD,AFPJ9G,ADEmC,GAAjC,CGKE8G,CHL0D,GCFtD,CAAC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","file":"script.04c05cf5.js","sourceRoot":"..","sourcesContent":["import { state } from \"./state.js\";\n\nconst path = document.querySelector(\".timer__progress--path\");\nconst length = path.getTotalLength();\n\n// Set up the starting positions\npath.style.strokeDasharray = length + \" \" + length;\npath.style.strokeDashoffset = length;\n\npath.getBoundingClientRect();\n\n// Define our transition\npath.style.transition = path.style.WebkitTransition =\n  \"stroke-dashoffset 1s ease-in-out\";\n\nexport const updateProgressRing = function (running = true) {\n  if (!running) path.style.strokeDashoffset = length;\n\n  if (running)\n    path.style.strokeDashoffset =\n      (state.currentTimer * length) / state[state.currentInterval];\n};\n","import { state } from \"./state\";\n\nexport const showNotification = function () {\n  const notification = new Notification(\"Promodoro App\", {\n    body: `${state.currentInterval} has finished`,\n    icon: \"./src/assets/favicon-32x32.png\",\n  });\n};\n\nNotification.requestPermission();\n\n// if (Notification.permission === \"granted\") {\n//   showNotification();\n// }\n// if (Notification.permission !== \"denied\") {\n//   Notification.requestPermission().then((permission) => {\n//     if (permission === \"granted\") showNotification();\n//   });\n// }\n","import { state } from \"./state.js\";\nimport { moveBackground } from \"./optionsView.js\";\nimport { updateProgressRing } from \"./progressRingView.js\";\nimport { showNotification } from \"./notification.js\";\n\n// Get the time from the DOM\nexport const timer = document.querySelector(\".timer__text > h1\");\nexport const totalWorkTime = document.querySelector(\".work-time\");\nconst nextSession = document.querySelector(\".next-session\");\nexport const controlBtn = document.querySelector(\".control\");\nexport const resetBtn = document.querySelector(\".reset\");\n\n// Declaring the interval\nlet countdown;\n\n// Start countdown function\nconst startCountdown = function () {\n  // Get the timer displayed on the IU and save it in the state object (in seconds)\n  state.currentTimer =\n    +timer.textContent.split(\":\")[0] * 60 + +timer.textContent.split(\":\")[1];\n\n  state.isRunning = true;\n\n  countdown = setInterval(updateCountdown, 1000);\n};\n\n// Update the timer on the UI\nconst updateCountdown = function () {\n  // Update the timer in state object\n  state.currentTimer--;\n\n  // Check if the timer is finished\n  if (state.currentTimer < 0) {\n    showNotification();\n\n    stopCountdown();\n    nextTimer();\n    updateProgressRing(false);\n\n    return;\n  }\n\n  // Display the running timer on the UI\n  displayTimer(state.currentTimer);\n\n  // Update progress ring\n  updateProgressRing();\n};\n\n// Start the next timer (According to the promodoro technique: You do 4 pomodoros/intervals separated by 5 min breaks. After that, you take a longer break of about 15 to 20 minutes)\nconst nextTimer = function () {\n  // Check the current interval/timer and change it to the next interval\n  switch (state.currentInterval) {\n    case \"promodoro\":\n      state.promodoroCount++;\n      state.totalWorkTime += state.promodoro;\n      state.currentInterval = \"shortBreak\";\n\n      displayTotalWorkTime(state.totalWorkTime);\n      nextSession.textContent = \"promodoro\";\n\n      break;\n\n    case \"shortBreak\":\n      state.currentInterval = \"promodoro\";\n\n      nextSession.textContent = \"short break\";\n      break;\n\n    case \"longBreak\":\n      state.currentInterval = \"promodoro\";\n\n      nextSession.textContent = \"short break\";\n\n      state.promodoroCount = 0;\n      break;\n  }\n\n  if (state.currentInterval === \"promodoro\" && state.promodoroCount === 3)\n    nextSession.textContent = \"long break\";\n  if (state.promodoroCount === 4) state.currentInterval = \"longBreak\";\n\n  localStorage.setItem(\"state\", JSON.stringify(state));\n\n  // Get the current timer's label on the HTML and move bg\n  const nextOption = document.querySelector(`#${state.currentInterval}`);\n  moveBackground(null, nextOption);\n\n  // Display and start the next timer about to start\n  displayTimer(state[state.currentInterval]);\n  startCountdown();\n};\n\n// Handle countdown on click event or when pressing the space key\nconst controlCountdown = function () {\n  if (controlBtn.textContent == \"start\" || controlBtn.textContent == \"resume\") {\n    startCountdown();\n    controlBtn.textContent = \"pause\";\n    resetBtn.classList.remove(\"active\");\n    return;\n  }\n  if (controlBtn.textContent == \"pause\") {\n    stopCountdown();\n    controlBtn.textContent = \"resume\";\n    resetBtn.classList.add(\"active\");\n  }\n};\n\n// Stop the countdown interval\nexport const stopCountdown = function () {\n  state.isRunning = false;\n  clearInterval(countdown);\n};\n\n// Transfer the seconds into minutes and seconds and display the result\nexport const displayTimer = function (sec) {\n  let minutes = Math.floor(sec / 60);\n  let seconds = sec % 60;\n\n  minutes = minutes < 10 ? `0${minutes}` : minutes;\n  seconds = seconds < 10 ? `0${seconds}` : seconds;\n\n  timer.textContent = document.title = `${minutes}:${seconds}`;\n};\n\nexport const displayTotalWorkTime = function (sec) {\n  let hours = Math.floor(sec / 3600);\n  let minutes = Math.floor((sec % 3600) / 60);\n  let seconds = Math.floor((sec % 3600) % 60);\n\n  hours = hours < 10 ? `0${hours}` : hours;\n  minutes = minutes < 10 ? `0${minutes}` : minutes;\n  seconds = seconds < 10 ? `0${seconds}` : seconds;\n\n  totalWorkTime.textContent =\n    document.title = `${hours}:${minutes}:${seconds} ${\n      hours == 0 ? \"min\" : hours == 1 ? \"hour\" : \"hours\"\n    }`;\n};\n\n// Reset\nexport const resetTimer = function () {\n  const defaultOption = document.querySelector(\"#promodoro\");\n\n  state.isRunning = false;\n  state.currentInterval = \"promodoro\";\n  state.promodoroCount = 0;\n  state.totalWorkTime = 0;\n\n  localStorage.setItem(\"state\", JSON.stringify(state));\n\n  resetBtn.classList.remove(\"active\");\n  controlBtn.textContent = \"start\";\n  displayTimer(state.promodoro);\n  displayTotalWorkTime(state.totalWorkTime);\n  moveBackground(null, defaultOption);\n  updateProgressRing(false);\n};\n\n// Event listeners\ncontrolBtn.addEventListener(\"click\", controlCountdown);\ndocument.addEventListener(\"keydown\", (e) => {\n  if (e.keyCode !== 32) return;\n  controlCountdown();\n});\n\n// Reset timers\nresetBtn.addEventListener(\"click\", resetTimer);\n","import { controlBtn, resetBtn, stopCountdown } from \"./countdown.js\";\nimport { state } from \"./state.js\";\n\nconst openSettingsBtn = document.querySelector(\".settings-btn\");\nconst closeSettingsBtn = document.querySelector(\".close-btn *\");\nconst settingsContainer = document.querySelector(\".settings-container\");\nconst inputs = settingsContainer.querySelectorAll(\n  \"input[type='number'], input[type='radio']\"\n);\nconst inputArrows = document.querySelectorAll(\".form__inputs--arrows > *\");\n\nconst openSettings = function () {\n  settingsContainer.classList.add(\"active\");\n  stopCountdown();\n};\n\nexport const closeSettings = function () {\n  settingsContainer.classList.remove(\"active\");\n};\n\n// Change input's value using svg arrows\nconst changeValue = function (e) {\n  // Get the input containing the clicked arrows\n  const input = e.target.closest(\n    \".form__inputs--arrows\"\n  ).previousElementSibling;\n\n  // Get the arrow rule (increase or decrease value)\n  const role = e.target.closest(\"svg\").dataset.role;\n\n  // Using stepUp method to change input value\n  role === \"increase\" ? input.stepUp() : input.stepDown();\n};\n\n// Arrow event listener\ninputArrows.forEach((el) =>\n  el.addEventListener(\"click\", (e) => {\n    changeValue(e);\n  })\n);\n\n// To prevent text selection when clicking multiple times on the arrows\ninputArrows.forEach((el) =>\n  el.addEventListener(\"mousedown\", (e) => e.preventDefault(), false)\n);\n\nconst previousSettings = function () {\n  settingsContainer.querySelector(\n    `input[value='${state.font}']`\n  ).checked = true;\n  settingsContainer.querySelector(\n    `input[value='${state.accentColor}']`\n  ).checked = true;\n\n  settingsContainer\n    .querySelectorAll(\"input[type='number']\")\n    .forEach((input) => {\n      input.value = state[input.id] / 60;\n    });\n};\n\n// Open settings popup\nopenSettingsBtn.addEventListener(\"click\", () => {\n  openSettings();\n  previousSettings();\n});\n\n// Close settings\n[settingsContainer, closeSettingsBtn].forEach((el) =>\n  el.addEventListener(\"click\", (e) => {\n    if (e.target === settingsContainer || e.target.closest(\".close-btn\")) {\n      if (controlBtn.textContent !== \"start\") {\n        controlBtn.textContent = \"resume\";\n        resetBtn.classList.add(\"active\");\n      }\n\n      closeSettings();\n    }\n  })\n);\n\ndocument.addEventListener(\"keydown\", (e) => {\n  if (e.keyCode !== 27) return;\n  closeSettings();\n});\n","import { state, root } from \"./state.js\";\nimport { controlBtn, resetBtn, displayTimer, resetTimer } from \"./countdown.js\";\nimport { closeSettings } from \"./settingsPopupView.js\";\nimport { updateProgressRing } from \"./progressRingView.js\";\n\nconst settingsForm = document.querySelector(\".form\");\nconst applyBtn = document.querySelector(\".form__btn\");\n\nexport const updateUISettings = function () {\n  root.style.setProperty(\"--accent-color\", state.colors[state.accentColor]);\n  root.style.setProperty(\"--font\", state.font);\n};\n\nconst applySettings = function () {\n  const inputs = settingsForm.querySelectorAll(\n    \"input[type='number'], input[type='radio']:checked\"\n  );\n\n  inputs.forEach((input) => {\n    const key = input.dataset.change;\n    const value = input.value;\n\n    key === \"font\" || key === \"accentColor\"\n      ? (state[key] = value)\n      : (state[key] = value * 60);\n  });\n\n  if (controlBtn.textContent !== \"start\") {\n    controlBtn.textContent = \"resume\";\n    resetBtn.classList.add(\"active\");\n  } else {\n    displayTimer(state[state.currentInterval]);\n  }\n\n  updateUISettings();\n  closeSettings();\n\n  localStorage.setItem(\"state\", JSON.stringify(state));\n};\n\napplyBtn.addEventListener(\"click\", applySettings);\ndocument.addEventListener(\"keydown\", (e) => {\n  if (e.keyCode !== 13) return;\n  applySettings();\n});\n","import {\n  timer,\n  displayTimer,\n  totalWorkTime,\n  displayTotalWorkTime,\n} from \"./countdown\";\nimport { moveBackground } from \"./optionsView\";\nimport { updateProgressRing } from \"./progressRingView\";\nimport { updateUISettings } from \"./settingsPopup\";\n\nexport let state = {\n  // All times in seconds\n  promodoro: 1500,\n  shortBreak: 300,\n  longBreak: 1200,\n  currentInterval: \"promodoro\",\n  currentTimer: 0,\n  promodoroCount: 0,\n  totalWorkTime: 0,\n  isRunning: false,\n  font: \"kumbh sans\",\n  accentColor: \"salmon\",\n  colors: {\n    salmon: \"#f87272\",\n    cyan: \"#72f4f8\",\n    violet: \"#d882f8\",\n  },\n};\n\nconst currentOption = document.querySelector(`#${state.currentInterval}`);\nexport const root = document.documentElement;\n\nconst init = function () {\n  const storage = localStorage.getItem(\"state\");\n  if (storage) state = JSON.parse(storage);\n\n  state.promodoroCount = 0;\n\n  updateUISettings();\n  moveBackground(null, currentOption);\n  displayTimer(state[state.currentInterval]);\n  displayTotalWorkTime(state.totalWorkTime);\n  document.title = \"promodoro\";\n};\n\nwindow.addEventListener(\"load\", init);\n","import { state } from \"./state.js\";\nimport {\n  timer,\n  controlBtn,\n  resetBtn,\n  stopCountdown,\n  displayTimer,\n} from \"./countdown.js\";\nimport { updateProgressRing } from \"./progressRingView.js\";\n\nconst options = document.querySelectorAll(\".option__label\");\nconst background = document.querySelector(\".option__background\");\n\n// Move the background behind the checked option\nexport const moveBackground = function (e, target) {\n  let input;\n\n  if (e) {\n    target = e.target.closest(\".option\");\n    input = e.target.previousElementSibling;\n  } else {\n    input = target;\n    target = target.closest(\".option\");\n  }\n\n  // Set the input to checked\n  input.checked = true;\n\n  // Get the distance (left) between the label and the parent element using offsetLeft\n  background.style.left = target.offsetLeft + \"px\";\n\n  // Set the current selected interval\n  state.currentInterval = target.querySelector(\"input\").id;\n};\n\n// Get the timer from the state object and display it on click\nconst updateTimer = function (e) {\n  const option = e.target.getAttribute(\"for\");\n\n  stopCountdown();\n\n  displayTimer(state[option]);\n  controlBtn.textContent = \"start\";\n};\n\n// Move background and change timer on click\noptions.forEach((option) =>\n  option.addEventListener(\"click\", (e) => {\n    moveBackground(e);\n    updateTimer(e);\n    updateProgressRing(false);\n\n    resetBtn.classList.remove(\"active\");\n\n    localStorage.setItem(\"state\", JSON.stringify(state));\n  })\n);\n","import \"./optionsView.js\";\nimport \"./settingsPopupView.js\";\nimport \"./settingsPopup.js\";\nimport \"./progressRingView\";\nimport \"./notification.js\";\nimport \"./countdown.js\";\n"]}